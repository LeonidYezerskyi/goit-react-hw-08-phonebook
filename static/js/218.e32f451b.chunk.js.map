{"version":3,"file":"static/js/218.e32f451b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactElement/ContactElement.module.css?8e20","components/ContactElement/ContactElement.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactForm_title__jZguf\",\"form\":\"ContactForm_form__dhl+T\",\"button\":\"ContactForm_button__eSwX9\",\"inputPaper\":\"ContactForm_inputPaper__EmhXL\"};","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from 'redux/contactSlice/operations';\n\nconst INITIAL_FORM_DATA = {\n    contactName: '',\n    contactNumber: '',\n};\n\nconst ContactForm = () => {\n    const contacts = useSelector((state) => state.contactsData.contacts.items);\n    const [formData, setFormData] = useState(INITIAL_FORM_DATA)\n    const dispatch = useDispatch();\n\n    const onChange = e => {\n        const { name, value } = e.target;\n\n        setFormData(prevState => ({ ...prevState, [name]: value }));\n    };\n\n    const onSubmitForm = e => {\n        e.preventDefault();\n\n        const newContact = {\n            id: nanoid(),\n            name: formData.contactName,\n            phone: formData.contactNumber,\n        };\n\n        if (\n            contacts.some(\n                contact =>\n                    contact.name.toLowerCase() === newContact.name.toLowerCase()\n            )\n        ) {\n            alert(`${newContact.name} is already in contact list.`);\n            return;\n        }\n\n        dispatch(addContact(newContact));\n        reset();\n    };\n\n    const reset = () => {\n        setFormData(INITIAL_FORM_DATA)\n    }\n\n    return (\n        <div>\n            <form className={css.form} onSubmit={onSubmitForm}>\n                <label>\n                    <p className={css.title}>Name</p>\n                    <input\n                        className={css.inputPaper}\n                        type=\"text\"\n                        name=\"contactName\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        onChange={onChange}\n                        value={formData.contactName}\n                        placeholder='Write name and family name'\n                        required\n                    />\n                </label>\n                <label>\n                    <p className={css.title}>Number</p>\n                    <input\n                        className={css.inputPaper}\n                        type=\"tel\"\n                        name=\"contactNumber\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        onChange={onChange}\n                        value={formData.contactNumber}\n                        placeholder='Write phone number'\n                        required\n                    />\n                </label>\n\n                <button className={css.button} type=\"submit\">Add contact</button>\n            </form>\n        </div>\n    )\n}\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\",\"title\":\"Filter_title__pSkfx\",\"inputPaper\":\"Filter_inputPaper__AXCFs\"};","import { filterContact } from 'redux/contactSlice/contactSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n    const filter = useSelector((state) => state.contactsData.filter);\n\n    const dispatch = useDispatch();\n    const onChangeFilter = e => {\n        dispatch(filterContact(e.target.value))\n    };\n\n    return (\n        <div >\n            <label className={css.filterBox}>\n                <p className={css.title}>Find contacts by name</p>\n                <input\n                    className={css.inputPaper}\n                    type=\"text\"\n                    name=\"filter\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    onChange={onChangeFilter}\n                    value={filter}\n                    placeholder='Write name'\n                    required\n                />\n            </label>\n        </div>\n    )\n};\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"sectionList\":\"ContactList_sectionList__BJE6W\",\"list\":\"ContactList_list__csErn\",\"notification\":\"ContactList_notification__rnBVo\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactElement_item__IDh1+\",\"button\":\"ContactElement_button__U3o19\"};","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from 'react-redux';\nimport css from './ContactElement.module.css';\nimport { deleteContact } from 'redux/contactSlice/operations';\n\nconst ContactElement = ({ name, phone, id }) => {\n    const dispatch = useDispatch();\n    return (\n        <li className={css.item} key={id}>{name}: {phone}\n            <button className={css.button} value={id} onClick={() => dispatch(deleteContact(id))}>Delete</button>\n        </li>\n    )\n}\n\nContactElement.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n};\n\nexport default ContactElement;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"ldsHourglass\":\"Loader_ldsHourglass__0jXeJ\",\"loader\":\"Loader_loader__+lRPl\"};","import React from 'react';\n\nimport css from './Loader.module.css';\n\nfunction Loader() {\n    return (\n        <div className={css.ldsHourglass} />\n    );\n}\n\nexport default Loader;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\nimport ContactElement from '../ContactElement/ContactElement';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactList = () => {\n    const { items, isLoading, error } = useSelector((state) => state.contactsData.contacts);\n    const filter = useSelector((state) => state.contactsData.filter);\n\n    const filteredContacts = items.filter(\n        item => item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return (\n        <section className={css.sectionList}>\n            {Boolean(error).length > 0 && (\n                <p className={css.notification}>Upss, Some error occured... {error}</p>\n            )}\n            {isLoading && <Loader />}\n            <ul className={css.list}>\n                {filteredContacts.map(({ id, name, phone }) => {\n                    return <ContactElement name={name} phone={phone} key={id} id={id} />\n                })}\n            </ul>\n        </section>\n    )\n}\n\nexport default ContactList;","import React from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport css from '../components/App.module.css';\n\nfunction ContactsPage() {\n\n    return (\n        <div className={css.paper}>\n            <h1 className={css.title}> Phonebook</h1>\n            <ContactForm />\n\n            <h2 className={css.title}>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </div >\n    );\n}\n\nexport default ContactsPage;"],"names":["INITIAL_FORM_DATA","contactName","contactNumber","contacts","useSelector","state","contactsData","items","useState","formData","setFormData","dispatch","useDispatch","onChange","e","target","name","value","prevState","reset","className","css","onSubmit","preventDefault","newContact","id","nanoid","phone","some","contact","toLowerCase","alert","addContact","type","pattern","title","placeholder","required","filter","filterContact","onClick","deleteContact","isLoading","error","filteredContacts","item","includes","Boolean","length","map"],"sourceRoot":""}